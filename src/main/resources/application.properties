management.endpoint.health.enabled=true
DRIFTPROXY_URL=http://webproxy-nais.nav.no/
#endpoints.prometheus.enabled=true
#endpoints.prometheus.web.enabled=true
spring.metrics.web.server.auto-time-requests=true

spring.data.rest.default-page-size=100
spring.data.rest.base-path=/api

#spring.kafka.bootstrap-servers=b27apvl00045.preprod.local:8443,b27apvl00046.preprod.local:8443,b27apvl00047.preprod.local:8443
spring.kafka.bootstrap-servers=bb27apvl00045.preprod.local:8443,bb27apvl00046.preprod.local:8443,bb27apvl00047.preprod.local:8443
spring.kafka.consumer.group-id=pam-cv-indexer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.client-id=pam-cv-indexer-${HOSTNAME}
spring.kafka.consumer.client-id=pam-cv-indexer-test
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.batch-size=1

spring.kafka.properties.specific.avro.reader=true
spring.kafka.properties.schema.registry.url=http://nnais-confluent-schema-registry.nais:8081
spring.kafka.properties.security.protocol=SSL
spring.kafka.ssl.truststore-location=file:/app/kafkatrust.jks
spring.kafka.ssl.truststore-password=hemmelig
#file:/var/run/secrets/naisd.io/app_truststore_keystore
#spring.kafka.ssl.truststore-password=${APP_TRUSTSTORE_PASSWORD}

server.port=8765
